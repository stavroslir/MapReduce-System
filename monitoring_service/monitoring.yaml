apiVersion: v1
kind: ServiceAccount            #Necessary to have access to the k8s API
metadata:
  name: my-app

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole                # This is necessary to define what permissions our app will have.
metadata:
  name: my-app
rules:
- apiGroups: [""]
  resources: ["pods","services"]
  verbs: ["get", "list", "watch","create","delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding      # This component is used to actually grant the defined permissions to our app.
metadata:
  name: my-app
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-app
subjects:
- kind: ServiceAccount
  name: my-app
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitoring-service
  labels:
    app: monitoring-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring-service
  template:
    metadata:
      labels:
        app: monitoring-service
    spec:
      serviceAccountName: my-app
      containers:
      - name: monitoring-service
        image: localhost:5004/monitoring-k8s:latest
        ports:
        - containerPort: 4003
        volumeMounts:
        - name: hostpath-storage
          mountPath: /app/shared
      volumes:
      - name: hostpath-storage
        hostPath:
          path: /Users/stavroslironis/Desktop/storage
          type: Directory

---
apiVersion: v1
kind: Service
metadata:
  name: monitor-service
spec:
  selector:
    app: monitoring-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4003
